{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2022-03-30-2years/",
    "result": {"data":{"site":{"siteMetadata":{"title":"ここにかく"}},"markdownRemark":{"id":"734da85f-0f69-5e86-9823-1acfb99bcb81","excerpt":"3月末で会計の仕事からプログラマーに転職して2年が経つので、この記事の続きを書く。 プログラミング1年くらいやってつまづいたこと 大きな進歩は無かったものの、今後の長期的な指針を得られた一年だった。 仕事 仕事では Node.js / TypeScript / GraphQL / React 等を使った Web…","html":"<p>3月末で会計の仕事からプログラマーに転職して2年が経つので、この記事の続きを書く。</p>\n<ul>\n<li><a href=\"https://lyohe.github.io/2021-02-04-programming-taihenda/\">プログラミング1年くらいやってつまづいたこと</a></li>\n</ul>\n<p>大きな進歩は無かったものの、今後の長期的な指針を得られた一年だった。</p>\n<h2 id=\"仕事\" style=\"position:relative;\"><a href=\"#%E4%BB%95%E4%BA%8B\" aria-label=\"仕事 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>仕事</h2>\n<p>仕事では Node.js / TypeScript / GraphQL / React 等を使った Web アプリケーションの開発に関わっていた。GraphQL は使い始めた当初は全く何が起きているか理解できなかったものの、問題にはまって解決することを繰り返していたら朧げながら掴めてきた。</p>\n<p>その中でも <a href=\"https://github.com/graphql/dataloader\">graphql/dataloader</a> のコードを読んだことはとても勉強になった。詳しくはこのブログにメモを書いたのだが、簡潔で短いコードながら GraphQL のパフォーマンス向上にとって重要な問題を解決している。</p>\n<ul>\n<li><a href=\"https://lyohe.github.io/2021-12-16-reading-dataloader/\">graphql/dataloader を読んだ話</a></li>\n</ul>\n<p>graphql/dataloader は Batch と Cache という2つの単純な機能で構成されているが、自身が何に責任を果たすかが明確なので GraphQL 新人の自分でも理解しやすかった。一定期間内のリクエストの Batch 処理と結果の Cache は graphql/dataloader がやってくれて、 Batch で実行する処理の内容や Cache インスタンスのカスタマイズはユーザーが自由に行える。</p>\n<p>React については最低の最低限の見た目でとりあえず動作するレベルの画面なら自分で作れるようになってきたが、日常的に触っているようなよくできたアプリケーションの画面を作るのは難しく非常に困っている。昨年も書いたが CSS が特に難しい…</p>\n<h3 id=\"サーバーエンジニア\" style=\"position:relative;\"><a href=\"#%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2\" aria-label=\"サーバーエンジニア permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>サーバーエンジニア</h3>\n<p>仕事でビールサーバーの分解洗浄をしていたのだが、その任を解かれたので「サーバーエンジニアです」という鉄板の自己紹介ネタが使えなくなった。会社の経理とか労務的な仕事も引き続きやっています。</p>\n<h3 id=\"仕事で問題にはまる話\" style=\"position:relative;\"><a href=\"#%E4%BB%95%E4%BA%8B%E3%81%A7%E5%95%8F%E9%A1%8C%E3%81%AB%E3%81%AF%E3%81%BE%E3%82%8B%E8%A9%B1\" aria-label=\"仕事で問題にはまる話 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>仕事で問題にはまる話</h3>\n<p>普段は在宅勤務で一人でプログラムを書いているのだが、問題にはまりこんで詰まることが多かった。印象的だったのがこれ。</p>\n<ul>\n<li><a href=\"https://dev.to/e_ntyo/typeorm-date-date-string-map-3el1\">TypeORMにおいて、<code class=\"language-text\">date</code> は <code class=\"language-text\">Date</code> でなく <code class=\"language-text\">string</code> にmapされるので気をつけましょう</a></li>\n</ul>\n<p>TypeORM の Entity 定義で、 DBMS 側で日付を扱う date 型のカラムに対して <code class=\"language-text\">Date</code> 型を指定したとき、実際には <code class=\"language-text\">string</code> にマッピングされているという仕様がある。自分が書くプログラムでは当然 <code class=\"language-text\">Date</code> 型が入っているとみなしていたので、何故ここでエラーになるんだ…と詰まってしまった。理由や背景が分かれば確かにその仕様で納得できるのだが、自分の偏見（<code class=\"language-text\">date</code> 型は <code class=\"language-text\">Date</code> 型にマッピングされているに違いない）が邪魔して答えに辿り着くのに時間を要した。</p>\n<p>次に印象的だったのが、ローカル環境（macOS）でテストが成功するのに CI だと失敗するという事件だった。これが起きる原因はいろいろあり得るのだが、自分が出会したのはファイル名の大文字小文字の区別によるものだった。</p>\n<ul>\n<li><a href=\"https://dev.classmethod.jp/articles/mac-apfs-ignore-case/\">あれMacって大文字と小文字を区別しないのか</a></li>\n</ul>\n<p>最近？の macOS のファイルシステムでは大文字小文字を区別しない（Case insensitive）ため、テストコード等で大文字のファイルを小文字でファイル名指定しても読んでくれるが、 CI では Ubuntu を使っていて大文字小文字を区別する（Case sensitive）ので通らなかった。ローカルではテストが成功していたので原因が分からず詰まってしまった。</p>\n<p>これは問題の切り分け方がよくなかったと思っていて、ローカルでテストが成功している => CI 環境に”問題”があると考えて見当違いの箇所を調べまくっていた。反省として、「テストが成功している」という事実をもって盲目的にコードを信頼するのではなく「そのテストが具体的にどういった順序で動作し何を証明しようとしているか」を一つ一つ追っていくのが重要だと感じた。</p>\n<p>そしてローカルの開発環境と CI 環境を揃えるのは大事。</p>\n<h3 id=\"反省点\" style=\"position:relative;\"><a href=\"#%E5%8F%8D%E7%9C%81%E7%82%B9\" aria-label=\"反省点 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>反省点</h3>\n<p>一人で悩む時間が多く、生産性は低かった。</p>\n<p>何かが分からない時は「これ分からないんですけど…」と詳しそうな人に聞けるが、そもそも自分が何を理解していないのかを理解していないという状況が多かった。</p>\n<p>基礎を固めて適切な質問ができるようになりたい。</p>\n<h2 id=\"個人\" style=\"position:relative;\"><a href=\"#%E5%80%8B%E4%BA%BA\" aria-label=\"個人 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>個人</h2>\n<p>何かを作っては途中で辞めるのを繰り返しているのだが、<a href=\"https://api.slack.com/future/overview\">Slack の新しいプラットフォーム</a>で使える簡単な用語集を作ってみたら多くの人（…といっても数百人だが）に見ていただいて嬉しかった。</p>\n<p><a href=\"https://github.com/lyohe/swords\">https://github.com/lyohe/swords</a></p>\n<p>これはドキュメントを読みながら2-3日で作ったやつで、傲慢な言い方だが「このレベルのアウトプットでも見てくれる人いるんだ」と元気が出た。<a href=\"https://deno.land/\">Deno</a> の体験も素晴らしかった。Slack 社の方にも見ていただいたようで嬉しい。</p>\n<p><a href=\"https://twitter.com/seratch_ja/status/1463322556786614277\">https://twitter.com/seratch_ja/status/1463322556786614277</a></p>\n<p>技術的な勉強ではないが、個人的にオープンソースのビジネスモデルに興味があって GitLab や HashiCorp など様々な会社の財務諸表を読んでみた。</p>\n<ul>\n<li><a href=\"https://zenn.dev/username/articles/2021-11-29-3fe9ccd53b5395d5ad5b\">ソースコードを公開したソフトウェアで収益を得ている会社</a></li>\n</ul>\n<p>どの会社も面白いのだが、何よりソースコードを公開してビジネスをやっている会社がこんなにあって市場にも評価されているんだなという印象が強く残った。この記事には書ききれないくらいたくさんの会社を見つけた。</p>\n<p>OSS の会社以外にも、気になる会社の決算をすぐ読めるので経理の仕事やっててよかったと思った。</p>\n<ul>\n<li><a href=\"https://lyohe.github.io/2021-07-11-fastly-2/\">Fastly の財務諸表を読んだ話 その2</a></li>\n<li><a href=\"https://lyohe.github.io/2021-08-22-walmart-financial-statements/\">ウォルマートの財務諸表を読んだ話</a></li>\n<li><a href=\"https://lyohe.github.io/2021-04-04-uipath-ipo/\">UiPath が上場するので Form S-1 をさらっと読む</a></li>\n</ul>\n<h3 id=\"技術的な勉強\" style=\"position:relative;\"><a href=\"#%E6%8A%80%E8%A1%93%E7%9A%84%E3%81%AA%E5%8B%89%E5%BC%B7\" aria-label=\"技術的な勉強 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>技術的な勉強</h3>\n<p>ここ一年で読んだ技術書としては Real World HTTP に良い学びを得た。このブログにもまとめ記事を書いた。</p>\n<ul>\n<li><a href=\"https://lyohe.github.io/2021-05-12-real-world-http2/\">Real World HTTP（第2版）を読んだ話</a></li>\n</ul>\n<p>この本は読んだ後もことある度に開いているし、これからもそうなると思う。HTTP の仕様が歴史を交えて紹介されていて、今の仕組みがなぜこうなっているのか背景を学ぶことで関連技術の理解にとても役に立つ。<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a> は何が XML なんだと思っていたが、この本で理由を知った。</p>\n<p>新しい言語としては、 Ruby にちょっとだけ手を出して Rails チュートリアルをやってみた。Web アプリケーション開発 RTA という印象で、とにかく驚くほど早く動くものができるのでそりゃ流行るだろうな〜と感じた。</p>\n<ul>\n<li><a href=\"https://lyohe.github.io/2021-09-19-rails-tutorial/\">ゼロから Rails チュートリアルをやってみた話</a></li>\n</ul>\n<p>あとは Rust の <a href=\"https://doc.rust-jp.rs/book-ja/\">TRPL</a> と呼ばれている入門書や Go のチュートリアル <a href=\"https://go-tour-jp.appspot.com/list\">A Tour of Go</a> などもやってみた。</p>\n<p>新しいプログラミング言語に手を出した理由としては JavaScript/TypeScript に加えてもう一つくらい言語を身につけたいと考えていたからで、いろいろ試してみた結果として今のところ最有力候補が Go になっている。文法や基本的な仕組みがとてもシンプルで、学び始めてからちょっとしたツールを作るまで短くてすむのが非常によかった。</p>\n<p>競技プログラミングは1年目に半年で挫折して以来やってないのだが、そろそろ再開したい。特に目標は立てずゲームとして楽しみたいと考えている。</p>\n<h3 id=\"反省点-1\" style=\"position:relative;\"><a href=\"#%E5%8F%8D%E7%9C%81%E7%82%B9-1\" aria-label=\"反省点 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>反省点</h3>\n<p>様々な分野に手を出してみたものの、どれも中途半端になってしまった。使える時間は限られているので、3年目は核となる一つの目標に集中していきたい。</p>\n<h2 id=\"プログラマーとしての心がけ\" style=\"position:relative;\"><a href=\"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%83%BC%E3%81%A8%E3%81%97%E3%81%A6%E3%81%AE%E5%BF%83%E3%81%8C%E3%81%91\" aria-label=\"プログラマーとしての心がけ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>プログラマーとしての心がけ</h2>\n<p>2年も働いているので、最近は駆け出しエンジニアですという言い訳も効かなくなってきた。仕事については以下を気をつけるようにしている。</p>\n<ul>\n<li>嘘をつかない</li>\n</ul>\n<p>動作確認しましたと言ったらちゃんとやっている、何か聞かれたら知っていることだけを答える、知らないことは知らないと言う、自信のないことは自分の認識を述べた上で自信がないと説明する。</p>\n<ul>\n<li>聞く前に調べる</li>\n</ul>\n<p>誰かに質問する前に、ドキュメントでもコードでも誰かのブログでも調べられることは調べて自分の認識を構築する。用意されているチュートリアルは全てやる、エラーメッセージやログをよく読む。</p>\n<ul>\n<li>層を意識する</li>\n</ul>\n<p>目の前のプログラムは何に責任を持つのか、その上下にはどのような責任の層が重なっているか、自分はどの層を把握しているか、または把握していないか、外部のパッケージは何に責任を持つか、エラーはどの層で起こっているのか等、手を動かしながら自分の認識と整合性を確認していく。</p>\n<p>全て完璧とは言えないときもあるが、心がけとして忘れないようにしたい。</p>\n<h2 id=\"3年目の目標\" style=\"position:relative;\"><a href=\"#3%E5%B9%B4%E7%9B%AE%E3%81%AE%E7%9B%AE%E6%A8%99\" aria-label=\"3年目の目標 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3年目の目標</h2>\n<p>仕事ではやる気を維持しつつ、様々な技術や知識を身につけていきたい。</p>\n<p>個人での活動については複数のことに同時に取り組めないのがはっきり分かったので、目標を一つに絞りたい。3年目の目標は「自作の会計ソフトを作ること」で、そのアルファ版を出すことを目標とする。完成したら OSS として公開したい。</p>\n<p>既存の（勘○奉行や弥○会計のような）財務会計ソフトを再実装するというよりは、自分が過去に会計の仕事をしていたとき困っていた課題である「ソフトウェアが生成するデジタルなデータと財務諸表とのインターフェイス」に集中しようと考えている。</p>\n<p>プログラマーに転職した理由がこの「自分で自分の課題を解決する会計ソフトを作りたい」なのだが、そろそろ作り始められそうな気がしてきた。この会計ソフト…というか会計インターフェース、で生きていけるだけの金を稼げるのが理想だが、まずは作って誰かに使ってもらわないと話にならないので出すことを目標にしたい。</p>\n<h2 id=\"最後に\" style=\"position:relative;\"><a href=\"#%E6%9C%80%E5%BE%8C%E3%81%AB\" aria-label=\"最後に permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最後に</h2>\n<p>最近読んだこの記事が印象的だった。自分もこのようにありたいと考えている。</p>\n<ul>\n<li><a href=\"https://engineer-lab.findy-code.io/shougo-vim\">[Findy Engineer Lab] 他人がやっていない事こそ強みになる。テキストエディタに人生を全振りしたエンジニアのキャリア戦略とは</a></li>\n</ul>\n<p>この方にとってのテキストエディタが自分にとっての会計ということになる。3年目もやっていきます。</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E4%BB%95%E4%BA%8B\">仕事</a></p>\n<ul>\n<li><a href=\"#%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2\">サーバーエンジニア</a></li>\n<li><a href=\"#%E4%BB%95%E4%BA%8B%E3%81%A7%E5%95%8F%E9%A1%8C%E3%81%AB%E3%81%AF%E3%81%BE%E3%82%8B%E8%A9%B1\">仕事で問題にはまる話</a></li>\n<li><a href=\"#%E5%8F%8D%E7%9C%81%E7%82%B9\">反省点</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E5%80%8B%E4%BA%BA\">個人</a></p>\n<ul>\n<li><a href=\"#%E6%8A%80%E8%A1%93%E7%9A%84%E3%81%AA%E5%8B%89%E5%BC%B7\">技術的な勉強</a></li>\n<li><a href=\"#%E5%8F%8D%E7%9C%81%E7%82%B9-1\">反省点</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%83%BC%E3%81%A8%E3%81%97%E3%81%A6%E3%81%AE%E5%BF%83%E3%81%8C%E3%81%91\">プログラマーとしての心がけ</a></p>\n</li>\n<li>\n<p><a href=\"#3%E5%B9%B4%E7%9B%AE%E3%81%AE%E7%9B%AE%E6%A8%99\">3年目の目標</a></p>\n</li>\n<li>\n<p><a href=\"#%E6%9C%80%E5%BE%8C%E3%81%AB\">最後に</a></p>\n</li>\n</ul>","frontmatter":{"title":"プログラマー2年目の振り返り","date":"March 30, 2022","description":null}},"previous":{"fields":{"slug":"/2022-03-06-contribute-oss-guide/"},"frontmatter":{"title":"メモ: How to Contribute to Open Source (Next.js)"}},"next":null},"pageContext":{"id":"734da85f-0f69-5e86-9823-1acfb99bcb81","previousPostId":"243c3f03-4f13-561d-9b63-78ff91f09897","nextPostId":null}},
    "staticQueryHashes": ["1445466728","2841359383"]}