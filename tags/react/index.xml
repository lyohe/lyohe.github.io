<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on ここにかく</title>
    <link>https://lyohe.github.io/tags/react/</link>
    <description>Recent content in React on ここにかく</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 17 Mar 2021 14:14:14 +0900</lastBuildDate><atom:link href="https://lyohe.github.io/tags/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React と Redux における immutability の重要性、あるいは JavaScript を何も理解してなかった話</title>
      <link>https://lyohe.github.io/post/2021-03-17-javascript-nanimo-wakaranai/</link>
      <pubDate>Wed, 17 Mar 2021 14:14:14 +0900</pubDate>
      
      <guid>https://lyohe.github.io/post/2021-03-17-javascript-nanimo-wakaranai/</guid>
      <description>JavaScript は奥が深い。以前このブログに「JavaScript はそれほど難しくないと思う」と書いたが、全くそんなことはなかった。
発端 React と Redux のドキュメントや関連するブログを読んでいると、しつこいくらい immutable や immutability という単語が登場する。
immutable は mutable の対義語。 mutable は mutate + -able で、 mutate は「ミュータント - mutant」という言葉に使われるように「変異する」という意味。ちなみにこの単語はニューヨークの下水道で暮らす亀が忍者に変異して悪と戦うアニメで覚えた。
immutable はその対義語なので「不変性」を意味しており、要は「あるオブジェクトの中身を直接書き換える（mutate）のではなくて、そのコピーを作ってそれを書き換えなさい」ということを指している。一般的に、 JavaScript において object を immutable update することにはいくつかのメリットがある。
https://developer.mozilla.org/en-US/docs/Glossary/Immutable
実は React のチュートリアルでも immutability の重要性について説明されているのだが、私はなぜそれが必要なのかを深く理解しないままやり過ごしてきた。
しかし、どうも気になる&amp;hellip;なんでわざわざこんな事をしなければならんのか。ということで、調べてブログに書くことにした。
JavaScript における immutability React や Redux における immutability の重要性について調べる前に、まずは JavaScript の基本を学ぶ。
JavaScript において、値は必ず primitive か object のいずれかになる。
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures
primitive は以下の7種類のデータ型で、これらに該当しない値が object となる。
 string number bigint boolean undefined symbol null  https://developer.</description>
    </item>
    
  </channel>
</rss>
