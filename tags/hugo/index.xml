<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hugo on ここにかく</title>
    <link>https://lyohe.github.io/tags/hugo/</link>
    <description>Recent content in hugo on ここにかく</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 03 Feb 2021 09:27:07 +0900</lastBuildDate><atom:link href="https://lyohe.github.io/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo &#43; GitHub Pages でブログを作った話</title>
      <link>https://lyohe.github.io/post/2021-02-03-hugo-to-github-pages/</link>
      <pubDate>Wed, 03 Feb 2021 09:27:07 +0900</pubDate>
      
      <guid>https://lyohe.github.io/post/2021-02-03-hugo-to-github-pages/</guid>
      <description>このブログは Hugo + GitHub Pages で作った。
Hugo Hugo は Go 製の静的サイトジェネレータで、 Markdown 等で書いた文章から Web サイトを生成してくれる。 生成した Web サイトの中身はただの静的なファイルなので、 Netlify や GitHub Pages その他さまざまなサービスで Hosting できる。
Hugo には様々なテーマが用意されていて、見た目を簡単にカスタマイズできる。このブログでは Tania というテーマを利用している。テーマの適用は非常にかんたんで、 Hugo のプロジェクト内の themes ディレクトリにテーマをダウンロード（多くは GitHub で提供されてるので普通に clone してくればよい）し、設定ファイルで使用するテーマを指定するだけでよい。
Hugo の仕組みや設定ファイルの書き方についてはさくらインターネットさんが公開している記事が分かりやすかったので、これを読んでから公式ドキュメントを読めば大抵のことは分かると思う。
 【さくらのナレッジ】静的サイトジェネレータ「Hugo」と技術文書公開向けテーマ「Docsy」でOSSサイトを作る  ちなみに上記のサイトでは設定ファイルとして config.toml を使っているが、 TOML だけでなく YAML も設定ファイルとして使うことができる。
GitHub Pages に deploy するまで GitHub Pages を始めるのは非常に簡単で、ここに書いてある通りにやるだけでよい。
https://pages.github.com/
リポジトリを作ったら hugo new post/ファイル名 で新しくファイルを作り、 Markdown 等でコンテンツを書く。テーマによって書き方が異なるケースがあるので、テーマごとの Demo サイトと自分のサイトを見比べたり hugo server でローカルで動かしてチェックするのがよい。</description>
    </item>
    
  </channel>
</rss>
