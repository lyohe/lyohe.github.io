<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>poem on ここにかく</title>
    <link>https://lyohe.github.io/tags/poem/</link>
    <description>Recent content in poem on ここにかく</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Thu, 04 Feb 2021 19:11:37 +0900</lastBuildDate><atom:link href="https://lyohe.github.io/tags/poem/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>プログラミング1年くらいやってつまづいたこと</title>
      <link>https://lyohe.github.io/post/2021-02-04-programming-taihenda/</link>
      <pubDate>Thu, 04 Feb 2021 19:11:37 +0900</pubDate>
      
      <guid>https://lyohe.github.io/post/2021-02-04-programming-taihenda/</guid>
      <description>プログラミングを本格的に始めてから1年くらい経ったので、今まで印象に残ったつまづきポイントを書いておく。
C言語 去年の今頃は 42 Tokyo の Piscine に参加していた（そのときの記事）。
このときはC言語でひたすら libc の再実装をしていた。それまでは Python や JavaScript でちょっとしたスクリプトを書いただけでC言語を書いたことが無かったのでとても辛かった（毎日100回の Segmentation fault を見る生活を4週間続けた）が、コンピュータの基礎に近づけた気がした。メモリをいちいち人間が確保したり解放したりしなきゃいけないというのがとても面倒だった覚えがある。
ところで、人間がコンピュータを使って何かしらの課題を解決しようとしたときに突き当たる壁として、ハードウェアやソフトウェアにそれぞれ多数の階層が積み重なっていて、どこで何が行われているかということを知らないと調査したり解決したりに時間がかかるという問題がある。
そういう意味ではいわゆるシステムプログラミングというか低レイヤーのプログラミングにも興味がある。ただ、今の自分は初心者プログラマーに過ぎないし、レイヤーに限らずソフトウェアエンジニアリング的に難しい仕事を任せてもらえるような立場ではない。これはプログラミングを続けていくしかない。
C言語は辛かったので最近 Rust を始めてみたが、これはこれで別の辛さがあった。ただコンピュータを使って問題を解決する仕事でお金をもらう以上、いずれ避けては通れない分野だと思っている。
CSS CSS って難しくないですか？
そもそもどこに何を書いたらどうなるのか全然分からないし、どのプロパティが継承されるかも分からない。あと Web サイトを作るときにどこからどこまでが CSS の仕事なのかもよくわからない。
今はとりあえず flexbox でひな形を作り、 Chrome の Dev Tools で Element を見てコピペしている。
デザインのセンスが致命的に無いので自分で CSS を書くのが辛いが、これも結局書いて慣れるしかないと思っている。
JavaScript JavaScript は文法そのものはそれほど難しくないと思うが、 Promise の概念を理解するのに1ヶ月くらいかかった。Promise は非同期処理を抽象化したオブジェクトで、結果を使って成功と失敗を分岐させるのだが、その非同期処理という概念そのものがよく分からなかった。
この変数が undefined になるのでなんでだろう〜と苦しんでいた記憶がある。結果としては、下記の Web サイトを上から下まで5回くらい読んでだいたい理解できた。
https://azu.github.io/promises-book/
プログラミングを始める前は「プログラムというものは人間が実現したい命令を予め決められた文法に従って記述した文や式である」と考えていたが、実際にはそれらの命令を抽象化する概念やそれを実装したオブジェクトや関数がたくさんあって、それらを知らないで文法だけ知っていてもやりたいことを実現するのは難しい。
例えば人間の直感からすると同期的なプログラミングの方が分かりやすい（と信じている）が、コンピュータ資源やユーザー体験の側面から見てそれが適切だとは限らない（ので、非同期プログラミングが誕生した）。文法だけでなくそれが導入された背景とか今まで積み重ねてきたものを理解しないとなかなか自分のやりたいことができないという辛みがある。書いてて思ったけどこれプログラミングに限らないな。
要はやっていくしかない。
そもそもの話 データ構造とアルゴリズム 再帰とかソートみたいな基本的なロジックから先にあるやつ（グラフ探索とか動的計画法とかなんとか優先探索とか）が全然分からない。
競技プログラミングの AtCoder を半年くらいやってみたけど Rating 324 で止まった（灰色）。これも勉強してプログラムをひたすら書いていくしかない。
どこに何を書くか 仕事のプログラムを書いていて、動くには動くんだけどこれここに書いていいんだっけ？という場面が無限にある。</description>
    </item>
    
    <item>
      <title>ブログを作りました</title>
      <link>https://lyohe.github.io/post/2021-02-02-introduction/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://lyohe.github.io/post/2021-02-02-introduction/</guid>
      <description>はじめまして。
GitHub Pages + Hugo でブログを作ってみました。
GitHub アカウント名は lyohe です。これは私の本名が「りょうへい（Ryohei）」なんですが、むかし少しだけ一緒に仕事したポルトガル人の同僚に物凄い巻き舌で「お前の名前『ッりょへ』っていうのか。すごく呼びづらいな！（意訳）」って言われて R じゃなくて L なのかなと思ってつけました。その結果、より発音しづらくなったっぽいです。
自分の名前に identity を感じないため Web サービスの ID はそのときの気分で決めています（Twitter: @rtsudar）が、アイコンにはいつも同じ写真を使うようにしています。この写真はトルクメニスタンの国会記事堂付近の地面に映った自分の影です。観光で行ったら夕方で影が長く伸びてたのが気に入って撮りました。議事堂の写真を撮るのは忘れました。
このブログにはプログラミングの話を書こうと考えています。とはいえ、私はプログラミングに関しては素人同然で数学や情報科学の素養もなく31歳未経験でプログラマーに転職したので、技術的に面白いと思ってもらえるような話が書けるかは分かりません。しかし、学んだことや新しく知ったことを整理して書くことは必ず自分の理解の促進に繋がると考えています。つまり自分のためでもあります。
元々は10年ほど経理の仕事をしていましたが、様々な仕事に触れる中で将来的に会計税務に関連する仕事でもプログラミングが重要になりそうだな〜と思って転職しました。
好きなことは読書で、嫌いなことは労働です。
これからよろしくお願いします。</description>
    </item>
    
  </channel>
</rss>
