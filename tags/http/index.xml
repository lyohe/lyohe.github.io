<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>http on ここにかく</title>
    <link>https://lyohe.github.io/tags/http/</link>
    <description>Recent content in http on ここにかく</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 12 May 2021 22:59:32 +0900</lastBuildDate><atom:link href="https://lyohe.github.io/tags/http/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Real World HTTP（第2版）を読んだ話</title>
      <link>https://lyohe.github.io/post/2021-05-12-real-world-http2/</link>
      <pubDate>Wed, 12 May 2021 22:59:32 +0900</pubDate>
      
      <guid>https://lyohe.github.io/post/2021-05-12-real-world-http2/</guid>
      <description>5月の連休中に Real World HTTP（第2版）を通読したので、簡単に感想をメモしておく。
https://www.amazon.co.jp/dp/4873119030
なお、この本の要約版が無料で公開されているので、買う前にまずはこちらを読むのがいいかもしれない。
https://www.oreilly.co.jp/books/9784873118789/
背景 なぜこの本を読むことにしたかというと、自分自身がプログラミング初心者であり、仕事や趣味でプログラムを書いていて HTTP に関する知識が不足している（&amp;hellip;というか、あらゆる点が全部不足してるんだけど）と感じることが多かったからだ。
プログラミングしていると、言語の標準ライブラリやそれをラップしたパッケージ等で気軽に HTTP 通信を扱うことがよくある。そうすると自分で書くプログラムは少なくて済むのだが、実際にどういう仕組みで動いているのかが分からないので問題が起きたときにどこを調べればいいか分からなくなってしまう。あと単純にどう動いてるかの概要が自分で分かってないと気持ち悪い。
インターネットを通じて何かを提供するためのプログラムを書いてお金をもらう仕事をしていく以上は HTTP の勉強を避けては通れないと思ったし、連休何もすることがなかったので、時間をかけて読んでみることにした。
書籍の概要 本書を一言で表すと「HTTP の歴史書」と言えると思う。
1ページ目の「まえがき」にはこうある。
 本書では、変化が大きくない領域である、HTTP（Hypertext Transfer Protocol）というウェブの転送用のプロトコルにフォーカスして紹介します。CGIとウェブアプリケーションサーバー、または最近でてきたサーバーレスアーキテクチャなど、ウェブサービスの裏で実装に使われる言語や仕組みはここ20年で大きく移り変わりましたが、実際にブラウザとサーバーの通信に関わる部分のコンセプトは20年近く、あまり変わっていません。コンピュータ業界は、日進月歩で新しい技術などが出続けるため、学び続けないといけないとよく言われます。それは半分正しくて半分間違っています。コンピュータサイエンスにあたるような内容、業界標準のプロトコル、テストしやすく見通しの良いコードの書き方、アルゴリズム、データベースなどは、一度学んでも無駄になることはありません。
 HTTP は「送信側（クライアント）」と「受信側（サーバー）」の両方がルールに従ってメッセージをやり取りする仕組みであり、この基本は誕生以来変わっていない。しかし一方で、ウェブの発展に伴って主なクライアントであるブラウザに様々な機能が追加されたり、それが仕様として標準化されたりしてきた。
最新の仕様を読むと巨大なプロトコルだが、歴史を辿っていくと最初は特定の課題を解決するためのシンプルなプロトタイプから始まり、それぞれの段階（HTTP/0.9 や 1.0、2など…）で状況に応じて現実のユースケースに対応するための改善がされていったという経緯があることが分かる。
その経緯を実際に手元で試しながら体系的に学ぶことで、新しい技術であっても何からどのように発展しているのかを知ることができ理解の促進に繋がる。ここに歴史を学ぶ意義がある。
原典といえる RFC への参照もあるので、気になった仕様をいくらでも深堀りできる。とても分厚い（約450ページ）本なので内容を全て覚えることは不可能だが、一度通読してどこに何が書いてあるか何となく把握できれば困ったことが起きる度に辞書的に引けて非常に便利になると思う。
そのため、思い立ったらすぐにめくれる紙媒体で買うのをおすすめしたい。
章ごとの大まかな構成と一言感想 第1章〜第2章 HTTP の先祖といえる電子メールやニュースグループから始まり、メソッドとパス、ヘッダー、ボディ、ステータス等の HTTP の基本概念やコンテントネゴシエーション、クッキー、セッション、キャッシュなどブラウザの裏側を支える仕組みを説明する。
今まで「何となくこういうものかな」と考えていた技術が体系的に整理されており、それぞれの関係性や複数の技術や機能の組み合わせでどのようなユースケースが実現されているかが分かりやすく解説されていて面白かった。
第3章 第1章〜第2章の内容を簡単におさらいしながらそれを実現する HTTP クライアントを Go 言語で実装する。
私はここで初めて Go 言語に触れたのだが、文法がシンプルで読みやすくて驚いた。仕事で使うレベルにするには修行が必要だろうが、読んで何をしているか把握するだけなら C や JavaScript 、または似たような言語を書いたことがあれば困らないと思う。
第4章〜第5章 主に HTTP/1.1 時代の新機能を紹介する。
Keep-Alive の仕組みや TLS の仕組み（鍵交換や通信手順によって何を守るか）、追加されたメソッド（CONNECT など）、さらには HTTP/1.1 時代に用途として追加されたファイルのダウンロード、XMLHttpRequest、ウェブサイト間の共通認証認可プラットフォーム（SAML や OAuth、OpenID など）がどのように実現されているかを解説する。</description>
    </item>
    
  </channel>
</rss>
